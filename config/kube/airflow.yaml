
apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow
  namespace: airflow
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: airflow
  name: airflow
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "update", "delete"]
  - apiGroups: ["batch", "extensions"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: airflow
  namespace: airflow
subjects:
  - kind: ServiceAccount
    name: airflow # Name of the ServiceAccount
    namespace: airflow
roleRef:
  kind: Role # This must be Role or ClusterRole
  name: airflow # This must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: admin-rbac
#   namespace: airflow
# subjects:
#   - kind: ServiceAccount
#     name: airflow
#     namespace: airflow
# roleRef:
#   kind: ClusterRole
#   name: cluster-admin
#   apiGroup: rbac.authorization.k8s.io
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow
  namespace: airflow
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: airflow
    spec:
      serviceAccountName: airflow
      initContainers:
        - name: "init"
          image: gcr.io/amaforge-scry/aggregator-airflow:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: airflow-configmap
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-dags
              mountPath: /root/airflow/dags
          env:
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-credentials
                  key: sql_alchemy_conn
          args: ["initdb"]
      containers:
        - name: webserver
          image: gcr.io/amaforge-scry/aggregator-airflow:latest
          imagePullPolicy: Always
          ports:
            - name: webserver
              containerPort: 8092
          args: ["webserver"]
          env:
            - name: AIRFLOW_KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-credentials
                  key: sql_alchemy_conn
          volumeMounts:
            - name: airflow-configmap
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-dags
              mountPath: /root/airflow/dags
            - name: airflow-logs
              mountPath: /root/airflow/logs
        - name: scheduler
          image: gcr.io/amaforge-scry/aggregator-airflow:latest
          imagePullPolicy: Always
          args: ["scheduler"]
          env:
            - name: AIRFLOW_KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-credentials
                  key: sql_alchemy_conn
          volumeMounts:
            - name: airflow-configmap
              mountPath: /root/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-dags
              mountPath: /root/airflow/dags
            - name: airflow-logs
              mountPath: /root/airflow/logs
      volumes:
        - name: airflow-configmap
          configMap:
            name: airflow-configmap
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
        - name: airflow-dags-fake
          emptyDir: {}
        - name: airflow-dags-git
          emptyDir: {}  
---
apiVersion: v1
kind: Service
metadata:
  name: airflow
spec:
  type: LoadBalancer
  ports:
    - port: 8092
  selector:
    name: airflow